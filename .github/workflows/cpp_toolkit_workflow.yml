name: WeDPR-Component ci for cpp-toolkit
on:
  push:
    paths-ignore:
      - "docs/**"
      - "python/**"
      - "Changelog.md"
      - "README.md"
  pull_request:
    paths-ignore:
      - "docs/**"
      - "python/**"
      - "Changelog.md"
      - "README.md"
  release:
    types: [published, push]
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  RUST_BACKTRACE: 1
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true

jobs:
  build_wedpr_toolkit:
    name: build wedpr toolkit
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-2019, macos-12]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 5
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-07-28
          override: true
      - name: Prepare vcpkg
        if: runner.os != 'Windows'
        uses: friendlyanon/setup-vcpkg@v1
        with: { committish: 51b14cd4e1230dd51c11ffeff6f7d53c61cc5297 }
      - uses: actions/cache@v2
        id: deps_cache
        with:
          path: |
            deps/
            ${{ env.VCPKG_ROOT }}
            ${{ env.VCPKG_ROOT }}/.git
            ${{ env.VCPKG_ROOT }}/buildtrees
            ${{ env.VCPKG_ROOT }}/packages
            ${{ env.VCPKG_ROOT }}/downloads
          key: build-toolkit-${{ matrix.os }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/cpp_toolkit_workflow.yml') }}
          restore-keys: |
            build-toolkit-${{ matrix.os }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/cpp_toolkit_workflow.yml') }}
            build-toolkit-${{ matrix.os }}-${{ github.base_ref }}-
            build-toolkit-${{ matrix.os }}-
      - name: Add MSbuild to PATH
        if: runner.os == 'Windows'
        uses: microsoft/setup-msbuild@v1.1
      - name: Build for windows
        if: runner.os == 'Windows'
        run: |
          mkdir -p cpp/build && cd cpp/build && cmake -G "Visual Studio 16 2019" -A x64 -DBUILD_PYTHON=OFF -DCMAKE_BUILD_TYPE=Release -DTESTS=OFF -DBUILD_WEDPR_TOOLKIT=ON -DVCPKG_TARGET_TRIPLET=x64-windows-static -DVCPKG_HOST_TRIPLET=x64-windows-static  -DCMAKE_TOOLCHAIN_FILE=c:/vcpkg/scripts/buildsystems/vcpkg.cmake .. && MSBuild /version && MSBuild WeDPR-Component.sln /p:Configuration=Release /p:Platform=x64
      - name: Build for linux
        if: runner.os == 'Linux'
        run: |
          sudo apt install -y lcov ccache wget libgmp-dev python3-dev
          export GCC='gcc-10'
          export CXX='g++-10'
          bash cpp/tools/install_depends.sh -o ubuntu
          mkdir -p cpp/build && cd cpp/build && cmake -DBUILD_WEDPR_TOOLKIT=ON -DBUILD_PYTHON=ON -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake ../
          make -j3
      - name: Build for macos
        if: runner.os == 'macOS'
        run: |
          brew install lcov
          bash cpp/tools/install_depends.sh -o macos
          mkdir -p cpp/build && cd cpp/build && cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_WEDPR_TOOLKIT=ON -DBUILD_PYTHON=ON -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake ../
          make -j3
      - uses: actions/upload-artifact@v4
        if: runner.os == 'macos'
        with:
          name: libwedpr_java_transport_jni.dylib
          path: ./cpp/wedpr-transport/sdk-wrapper/java/bindings/src/main/resources/META-INF/native/libwedpr_java_transport_jni.dylib
      - uses: actions/upload-artifact@v4
        if: runner.os == 'Windows'
        with:
          name: libwedpr_java_transport_jni.dll
          path: D:\a\WeDPR-Component\WeDPR-Component\cpp\wedpr-transport\sdk-wrapper\java\bindings\src\main\resources\META-INF\native\Release\wedpr_java_transport_jni.dll
      - uses: actions/upload-artifact@v4
        if: runner.os == 'macos'
        with:
          name: libwedpr_python_transport.dylib
          path: ./cpp/wedpr-transport/sdk-wrapper/python/bindings/wedpr_python_gateway_sdk/libs/libwedpr_python_transport.dylib
      - uses: actions/upload-artifact@v4
        if: runner.os == 'Windows'
        with:
          name: libwedpr_python_transport.dll
          path: D:\a\WeDPR-Component\WeDPR-Component\cpp\wedpr-transport\sdk-wrapper\python\bindings\wedpr_python_gateway_sdk\libs\Release\wedpr_python_transport.dll


  build_centos_for_toolkit:
      name: build_centos_for_toolkit
      runs-on: ${{ matrix.os }}
      continue-on-error: true
      strategy:
        fail-fast: false
        matrix:
          os: [ubuntu-latest]
      container:
        image: docker.io/centos:7
        volumes:
          - /usr/local/share/vcpkg:/usr/local/share/vcpkg
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 5
        - uses: actions/cache@v3
          id: deps_cache
          with:
            path: |
              deps/
              /usr/local/share/vcpkg/buildtrees
              /usr/local/share/vcpkg/packages
              /home/runner/.ccache
              /Users/runner/.ccache/
            key: centos-toolkit-notest-all-${{ matrix.os }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/cpp_toolkit_workflow.yml') }}
            restore-keys: |
              centos-toolkit-notest-all-${{ matrix.os }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/cpp_toolkit_workflow.yml') }}
              centos-toolkit-notest-all-${{ matrix.os }}-${{ github.base_ref }}-
              centos-toolkit-notest-all-${{ matrix.os }}-
        - name: Prepare centos tools
          run: |
            rpm -ivh https://cbs.centos.org/kojifiles/packages/centos-release-scl-rh/2/3.el7.centos/noarch/centos-release-scl-rh-2-3.el7.centos.noarch.rpm
            rpm -ivh https://cbs.centos.org/kojifiles/packages/centos-release-scl/2/3.el7.centos/noarch/centos-release-scl-2-3.el7.centos.noarch.rpm
            sed -i s/mirror.centos.org/mirrors.aliyun.com/g /etc/yum.repos.d/*.repo
            sed -i s/^#.*baseurl=http/baseurl=http/g /etc/yum.repos.d/*.repo
            sed -i s/^mirrorlist=http/#mirrorlist=http/g /etc/yum.repos.d/*.repo
            cat /etc/yum.repos.d/*.repo
            yum clean all
            yum makecache
            yum update -y
            yum install -y epel-release centos-release-scl centos-release-scl-rh
            yum install -y https://packages.endpointdev.com/rhel/7/os/x86_64/endpoint-repo.x86_64.rpm
            yum install -y java-11-openjdk-devel git make gcc gcc-c++ glibc-static glibc-devel openssl cmake3 ccache devtoolset-11 llvm-toolset-7.0 rh-perl530-perl libzstd-devel zlib-devel flex bison python-devel python3-devel
            yum install -y rh-perl530-perl cmake3 zlib-devel ccache lcov python-devel python3-devel
            yum install -y git
        - name: Build
          run: |
            alias cmake='cmake3'
            . /opt/rh/devtoolset-11/enable
            mkdir -p cpp/build
            cd cpp/build
            cmake3 -DCMAKE_BUILD_TYPE=Release -DBUILD_WEDPR_TOOLKIT=ON -DBUILD_PYTHON=ON -DCMAKE_TOOLCHAIN_FILE=/usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake ../
            cmake3 --build . --parallel 3
        - uses: actions/upload-artifact@v3
          with:
            name: libwedpr_java_transport_jni.so
            path: ./cpp/wedpr-transport/sdk-wrapper/java/bindings/src/main/resources/META-INF/native/libwedpr_java_transport_jni.so
        - uses: actions/upload-artifact@v3
          with:
            name: libwedpr_python_transport.so
            path: ./cpp/wedpr-transport/sdk-wrapper/python/bindings/wedpr_python_gateway_sdk/libs/libwedpr_python_transport.so