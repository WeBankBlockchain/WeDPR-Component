name: WeDPR-Component ci(cpp)
on:
  push:
    paths-ignore:
      - "docs/**"
      - "Changelog.md"
      - "README.md"
  pull_request:
    paths-ignore:
      - "docs/**"
      - "Changelog.md"
      - "README.md"
  release:
    types: [published, push]
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  RUST_BACKTRACE: 1
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true

jobs:
  build:
    name: build all
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        os: [macos-12, ubuntu-20.04]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 5
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-07-28
          override: true
      - name: Prepare vcpkg
        if: runner.os != 'Windows'
        uses: friendlyanon/setup-vcpkg@v1
        with: { committish: 51b14cd4e1230dd51c11ffeff6f7d53c61cc5297 }
      - uses: actions/cache@v2
        id: deps_cache
        with:
          path: |
            deps/
            c:/vcpkg
            !c:/vcpkg/.git
            !c:/vcpkg/buildtrees
            !c:/vcpkg/packages
            !c:/vcpkg/downloads
          key: build-${{ matrix.os }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/workflow.yml') }}
          restore-keys: |
            build-${{ matrix.os }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/workflow.yml') }}
            build-${{ matrix.os }}-${{ github.base_ref }}-
            build-${{ matrix.os }}-
      - name: Build for linux
        if: runner.os == 'Linux'
        run: |
          sudo apt install -y lcov ccache wget libgmp-dev python3-dev
          export GCC='gcc-10'
          export CXX='g++-10'
          bash cpp/tools/install_depends.sh -o ubuntu
          mkdir -p cpp/build && cd cpp/build && cmake -DTESTS=ON -DCOVERAGE=ON -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake ../ || cat *.log || cat /Users/runner/work/WeDPR-Component/WeDPR-Component/vcpkg/buildtrees/libhdfs3/config-x64-osx-dbg-err.log
          make -j3
      - name: Build for macos
        if: runner.os == 'macOS'
        run: |
          bash cpp/tools/install_depends.sh -o macos
          mkdir -p cpp/build && cd cpp/build && cmake -DTESTS=ON -DCOVERAGE=ON -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake ../
          make -j3
      - name: Test
        if: runner.os != 'Windows'
        run: |
          cd cpp/build && CTEST_OUTPUT_ON_FAILURE=TRUE ctest

  build_sdk:
    name: build sdk
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-2019, macos-12]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 5
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-07-28
          override: true
      - name: Prepare vcpkg
        if: runner.os != 'Windows'
        uses: friendlyanon/setup-vcpkg@v1
        with: { committish: 51b14cd4e1230dd51c11ffeff6f7d53c61cc5297 }
      - uses: actions/cache@v2
        id: deps_cache
        with:
          path: |
            deps/
            ${{ env.VCPKG_ROOT }}
            ${{ env.VCPKG_ROOT }}/.git
            ${{ env.VCPKG_ROOT }}/buildtrees
            ${{ env.VCPKG_ROOT }}/packages
            ${{ env.VCPKG_ROOT }}/downloads
          key: build-${{ matrix.os }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/workflow.yml') }}
          restore-keys: |
            build-${{ matrix.os }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/workflow.yml') }}
            build-${{ matrix.os }}-${{ github.base_ref }}-
            build-${{ matrix.os }}-
      - name: Add MSbuild to PATH
        if: runner.os == 'Windows'
        uses: microsoft/setup-msbuild@v1.1
      - name: Build for windows
        if: runner.os == 'Windows'
        run: |
          mkdir -p cpp/build && cd cpp/build && cmake -G "Visual Studio 16 2019" -A x64 -DCMAKE_BUILD_TYPE=Release -DTESTS=OFF -DBUILD_SDK=ON -DVCPKG_TARGET_TRIPLET=x64-windows-static -DCMAKE_TOOLCHAIN_FILE=c:/vcpkg/scripts/buildsystems/vcpkg.cmake .. && MSBuild /version && MSBuild wedpr-component.sln /p:Configuration=Release /p:Platform=x64 || cat *.log
      - name: Build for linux
        if: runner.os == 'Linux'
        run: |
          sudo apt install -y lcov ccache wget libgmp-dev python3-dev
          export GCC='gcc-10'
          export CXX='g++-10'
          bash cpp/tools/install_depends.sh -o ubuntu
          mkdir -p cpp/build && cd cpp/build && cmake -DTESTS=ON -DCOVERAGE=ON -DBUILD_SDK=ON -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake ../ || cat *.log
          make -j3
      - name: Build for macos
        if: runner.os == 'macOS'
        run: |
          brew install lcov
          bash cpp/tools/install_depends.sh -o macos
          mkdir -p cpp/build && cd cpp/build && cmake -DTESTS=ON -DCOVERAGE=OFF -DBUILD_SDK=ON -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake ../ || cat *.log
          make -j3
      - name: Test
        if: runner.os == 'macOS'
        run: |
          cd cpp/build && CTEST_OUTPUT_ON_FAILURE=TRUE make test
      - name: Test and upload coverage
        if: runner.os == 'Linux'
        run: |
          cd cpp/build && CTEST_OUTPUT_ON_FAILURE=TRUE make test
      - uses: actions/upload-artifact@v4
        if: runner.os == 'macos'
        with:
          name: libppc-crypto-sdk-jni.dylib
          path: ./cpp/wedpr-component-sdk/bindings/java/src/main/resources/META-INF/native/libppc-crypto-sdk-jni.dylib
      - uses: actions/upload-artifact@v4
        if: runner.os == 'Windows'
        with:
          name: libppc-crypto-sdk-jni.dll
          path: D:\a\WeDPR-Component\cpp\wedpr-component-sdk\bindings\java\src\main\resources\META-INF\native\Release\ppc-crypto-sdk-jni.dll


  build_centos:
    name: build_centos full node
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
    container: docker.io/centos:7
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 5
      - uses: actions/setup-node@v4
        with:
          node-version: 16
          cache: 'npm'
      - uses: actions/cache@v2
        id: deps_cache
        with:
          path: |
            deps/
            /home/runner/.ccache
            /Users/runner/.ccache/
          key: centos-notest-${{ matrix.os }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/workflow.yml') }}
          restore-keys: |
            centos-notest-${{ matrix.os }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/workflow.yml') }}
            centos-notest-${{ matrix.os }}-${{ github.base_ref }}-
            centos-notest-${{ matrix.os }}-
      - name: Prepare centos tools
        run: |
          sed -i s/mirror.centos.org/vault.centos.org/g /etc/yum.repos.d/*.repo
          sed -i s/^#.*baseurl=http/baseurl=http/g /etc/yum.repos.d/*.repo
          sed -i s/^mirrorlist=http/#mirrorlist=http/g /etc/yum.repos.d/*.repo
          yum install -y java-11-openjdk-devel git make gcc gcc-c++ glibc-static glibc-devel openssl cmake3 ccache devtoolset-11 llvm-toolset-7.0 rh-perl530-perl libzstd-devel zlib-devel flex bison python-devel python3-devel
          yum install -y devtoolset-10 devtoolset-11 llvm-toolset-7 rh-perl530-perl cmake3 zlib-devel ccache lcov python-devel python3-devel
          yum install -y https://packages.endpointdev.com/rhel/7/os/x86_64/endpoint-repo.x86_64.rpm
          yum install -y git
      - name: Prepare vcpkg
        if: runner.os != 'Windows'
        uses: friendlyanon/setup-vcpkg@v1
        with: { committish: 51b14cd4e1230dd51c11ffeff6f7d53c61cc5297 }
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-07-28
          override: true
      - name: Build
        run: |
          alias cmake='cmake3'
          . /opt/rh/devtoolset-10/enable
          . /opt/rh/rh-perl530/enable
          export LIBCLANG_PATH=/opt/rh/llvm-toolset-7/root/lib64/
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
          . /opt/rh/llvm-toolset-7/enable
          mkdir -p cpp/build
          cd cpp/build
          cmake3 -DCMAKE_BUILD_TYPE=Release -DTESTS=ON -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake ../ || cat *.log
          cmake3 --build . --parallel 3 || cat *.log
      - name: Test
        run: |
          export OMP_NUM_THREADS=1
          cd build && CTEST_OUTPUT_ON_FAILURE=TRUE make test
      - uses: actions/upload-artifact@v4
        with:
          name: ppc-air-node-centos-x64
          path: ./cpp/build/bin/ppc-air-node
      - uses: actions/upload-artifact@v4
        with:
          name: ppc-pro-node-centos-x64
          path: ./cpp/build/bin/ppc-pro-node
      - uses: actions/upload-artifact@v4
        with:
          name: ppc-gateway-service-centos-x64
          path: ./cpp/build/bin/ppc-gateway-service
      - uses: actions/upload-artifact@v4
        with:
          name: libppc-crypto-sdk-jni.so
          path: ./cpp/wedpr-component-sdk/bindings/java/src/main/resources/META-INF/native/libppc-crypto-sdk-jni.so
