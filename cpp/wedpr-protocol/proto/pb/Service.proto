syntax = "proto3";
import "NodeInfo.proto";
option java_package = "ppc.proto.grpc";

package ppc.proto;

message Error{
    // the errorCode
    int64 errorCode = 1;
    // the errorMessage
    string errorMessage = 2;
};

message ReceivedMessage{
    bytes data = 1; 
};

message RouteInfo{
    string topic = 1;
    string componentType = 2;
    bytes srcNode = 3;
    bytes dstNode = 4;
    bytes dstInst = 5;
};

message SendedMessageRequest{
    int32 routeType = 1;
    RouteInfo routeInfo = 2;
    bytes payload = 3;
    int64 timeout = 4;
    string traceID = 5;
};

message SelectRouteRequest{
    int32 routeType = 1;
    RouteInfo routeInfo = 2;
}

message AgenciesInfo{
    Error error = 1;
    repeated string agencies = 2;
};

message PeersInfo{
    Error error = 1;
    string peersInfo = 2;
};
message Empty{
    int32 status = 1;
};

message Condition{
    repeated string components = 1;
};

message NodeList{
    repeated string nodeList = 1;
    Error error = 2;
};
service Front {
    rpc onReceiveMessage (ReceivedMessage) returns (Error) {}
}
service Gateway{
    rpc asyncSendMessage(SendedMessageRequest) returns(Error){}
    rpc asyncGetPeers(Empty)returns(PeersInfo){}
    rpc selectNodesByRoutePolicy(SelectRouteRequest)returns(NodeList){}
    rpc asyncGetAgencies(Condition)returns(AgenciesInfo){}
    rpc registerNodeInfo(NodeInfo) returns(Error){}
    rpc unRegisterNodeInfo(NodeInfo)returns(Error){}
    rpc registerTopic(NodeInfo) returns(Error){}
    rpc unRegisterTopic(NodeInfo) returns(Error){}
};